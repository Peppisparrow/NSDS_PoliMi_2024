[
    {
        "id": "a13034e0970d9f68",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0ba4ee481f3c04b1",
        "type": "mqtt in",
        "z": "a13034e0970d9f68",
        "name": "MQTT input 1",
        "topic": "neslabpolimi/smartcity/milan",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d3ffed019cd71f89",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 100,
        "wires": [
            [
                "cf4e28d72cd71080"
            ]
        ]
    },
    {
        "id": "cf4e28d72cd71080",
        "type": "function",
        "z": "a13034e0970d9f68",
        "name": "ComputeAverage",
        "func": "let temperatures = flow.get(\"temp\") || [];\n\nif (msg.payload.fields.temperature != undefined) {\n    temperatures.push(msg.payload.fields.temperature);\n\n    if (temperatures.length > 10) {\n        temperatures.shift();\n    }\n\n    let sum = temperatures.reduce((acc, temp) => acc + temp, 0);\n    let avg = sum / temperatures.length;\n\n    flow.set(\"temp\", temperatures);\n\n    msg.payload.averageTemperature = avg;\n    global.set(\"average\", avg);\n    return msg;\n} else {\n    return null;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2b2f0ad0c6da7130",
        "type": "mqtt out",
        "z": "a13034e0970d9f68",
        "name": "",
        "topic": "neslabpolimi/nsds/eval24/alarm",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d3ffed019cd71f89",
        "x": 730,
        "y": 340,
        "wires": []
    },
    {
        "id": "156d25135490e9c0",
        "type": "mqtt in",
        "z": "a13034e0970d9f68",
        "name": "MQTT input 2",
        "topic": "neslabpolimi/nsds/eval24/k",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d3ffed019cd71f89",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 500,
        "wires": [
            [
                "a4ae7c85a83ff9a4"
            ]
        ]
    },
    {
        "id": "fc725a4ee4b8c3fc",
        "type": "function",
        "z": "a13034e0970d9f68",
        "name": "CompareDifference",
        "func": "let diff = msg.payload.diff;\nlet k = global.get(\"K\");\nif (diff != undefined && k != undefined){\n    if (Math.abs(diff) > k){\n        let newM = msg;\n        newM.payload = \"Temperature data is not coherent!\";\n        return newM;\n    }\n    else {\n        return null;\n    }\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 360,
        "wires": [
            [
                "2b2f0ad0c6da7130",
                "5f26b5ea59e4ebaa"
            ]
        ]
    },
    {
        "id": "5f26b5ea59e4ebaa",
        "type": "debug",
        "z": "a13034e0970d9f68",
        "name": "PrintNotCoherent",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 440,
        "wires": []
    },
    {
        "id": "23cd4e3f9bca142e",
        "type": "inject",
        "z": "a13034e0970d9f68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "fa53b6f398fe89bf"
            ]
        ]
    },
    {
        "id": "fa53b6f398fe89bf",
        "type": "openweathermap",
        "z": "a13034e0970d9f68",
        "name": "",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "Milano",
        "country": "Italia",
        "language": "en",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "fce2af53580d6fc0"
            ]
        ]
    },
    {
        "id": "3d9dad308aa8c3ed",
        "type": "function",
        "z": "a13034e0970d9f68",
        "name": "ComputeDifference",
        "func": "let tempA = global.get(\"average\");\nif (tempA != undefined){\n    let diff = msg.payload.temperature - tempA;\n    let newM = msg;\n    newM.payload = {\n        message: \"difference is:\",\n        diff\n    }\n    return newM;\n} else {\n    let newM = msg;\n    newM.payload = {\n        message: \"diff not computed yet\",\n    }\n\n    return newM;\n}\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 220,
        "wires": [
            [
                "40500a65486d73db",
                "fc725a4ee4b8c3fc"
            ]
        ]
    },
    {
        "id": "fce2af53580d6fc0",
        "type": "function",
        "z": "a13034e0970d9f68",
        "name": "QueryOpenW",
        "func": "let newM = msg;\nnewM.payload = {\n    temperature : msg.payload.tempk\n};\nreturn newM;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 220,
        "wires": [
            [
                "3d9dad308aa8c3ed"
            ]
        ]
    },
    {
        "id": "40500a65486d73db",
        "type": "debug",
        "z": "a13034e0970d9f68",
        "name": "printDifference",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 140,
        "wires": []
    },
    {
        "id": "a4ae7c85a83ff9a4",
        "type": "function",
        "z": "a13034e0970d9f68",
        "name": "setK",
        "func": "global.set(\"K\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 500,
        "wires": [
            [
                "0e22f9a4c3cd02d8"
            ]
        ]
    },
    {
        "id": "0e22f9a4c3cd02d8",
        "type": "debug",
        "z": "a13034e0970d9f68",
        "name": "PrintK",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 500,
        "wires": []
    },
    {
        "id": "d3ffed019cd71f89",
        "type": "mqtt-broker",
        "name": "sensor.community",
        "broker": "mqtt.neslab.it",
        "port": "3200",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]